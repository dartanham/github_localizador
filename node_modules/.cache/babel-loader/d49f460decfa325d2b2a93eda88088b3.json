{"ast":null,"code":"var _jsxFileName = \"/home/dartanham/Documentos/github-interface-app/src/components/Repositories/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport * as $ from './styled';\nimport { RepositoryItem } from '../RepositoryItem';\nimport useGithub from '../../hooks/GithubHooks';\nimport translation, { strings } from '../../services/translation';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Repositories = () => {\n  _s();\n\n  const {\n    githubState,\n    getUserRepos,\n    getUserStarred\n  } = useGithub();\n  const [hasUserToSearchRepos, setHasUserToSearchRepos] = useState(false);\n  useEffect(() => {\n    if (githubState.user.login) {\n      getUserRepos(githubState.user.login);\n      getUserStarred(githubState.user.login);\n    }\n\n    setHasUserToSearchRepos(githubState.repositories); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [githubState.user.login]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: hasUserToSearchRepos ? /*#__PURE__*/_jsxDEV($.TabsWrapper, {\n      selectedTabClassName: \"is-selected\",\n      selectedTabPanelClassName: \"is-selected\",\n      children: [/*#__PURE__*/_jsxDEV($.TabListWrapper, {\n        children: [/*#__PURE__*/_jsxDEV($.TabWrapper, {\n          children: translation(strings.repositories.repositoriesTab)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV($.TabWrapper, {\n          children: translation(strings.repositories.starredTab)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV($.TabPanelWrapper, {\n        children: /*#__PURE__*/_jsxDEV($.ListWrapper, {\n          children: githubState.repositories.map(e => /*#__PURE__*/_jsxDEV(RepositoryItem, {\n            name: e.name,\n            fullName: e.full_name,\n            reposLink: e.full_name\n          }, e.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV($.TabPanelWrapper, {\n        children: /*#__PURE__*/_jsxDEV($.ListWrapper, {\n          children: githubState.starred.map(e => /*#__PURE__*/_jsxDEV(RepositoryItem, {\n            name: e.name,\n            fullName: e.full_name,\n            reposLink: e.full_name\n          }, e.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n  }, void 0, false);\n};\n\n_s(Repositories, \"UHtuPLT27i40t1n0heJVIvxGdRY=\", false, function () {\n  return [useGithub];\n});\n\n_c = Repositories;\n\nvar _c;\n\n$RefreshReg$(_c, \"Repositories\");","map":{"version":3,"sources":["/home/dartanham/Documentos/github-interface-app/src/components/Repositories/index.jsx"],"names":["React","useEffect","useState","$","RepositoryItem","useGithub","translation","strings","Repositories","githubState","getUserRepos","getUserStarred","hasUserToSearchRepos","setHasUserToSearchRepos","user","login","repositories","repositoriesTab","starredTab","map","e","name","full_name","id","starred"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,KAAKC,CAAZ,MAAmB,UAAnB;AACA,SAASC,cAAT,QAA+B,mBAA/B;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,WAAP,IAAsBC,OAAtB,QAAqC,4BAArC;;;AAEA,OAAO,MAAMC,YAAY,GAAG,MAAM;AAAA;;AAC9B,QAAM;AAAEC,IAAAA,WAAF;AAAeC,IAAAA,YAAf;AAA6BC,IAAAA;AAA7B,MAAgDN,SAAS,EAA/D;AACA,QAAM,CAACO,oBAAD,EAAuBC,uBAAvB,IAAkDX,QAAQ,CAAC,KAAD,CAAhE;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIQ,WAAW,CAACK,IAAZ,CAAiBC,KAArB,EAA4B;AACxBL,MAAAA,YAAY,CAACD,WAAW,CAACK,IAAZ,CAAiBC,KAAlB,CAAZ;AACAJ,MAAAA,cAAc,CAACF,WAAW,CAACK,IAAZ,CAAiBC,KAAlB,CAAd;AACH;;AACDF,IAAAA,uBAAuB,CAACJ,WAAW,CAACO,YAAb,CAAvB,CALY,CAOhB;AACC,GARQ,EAQN,CAACP,WAAW,CAACK,IAAZ,CAAiBC,KAAlB,CARM,CAAT;AAUA,sBACA;AAAA,cACMH,oBAAoB,gBAClB,QAAC,CAAD,CAAG,WAAH;AACI,MAAA,oBAAoB,EAAG,aAD3B;AAEI,MAAA,yBAAyB,EAAG,aAFhC;AAAA,8BAGI,QAAC,CAAD,CAAG,cAAH;AAAA,gCACI,QAAC,CAAD,CAAG,UAAH;AAAA,oBAAeN,WAAW,CAACC,OAAO,CAACS,YAAR,CAAqBC,eAAtB;AAA1B;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,CAAD,CAAG,UAAH;AAAA,oBAAeX,WAAW,CAACC,OAAO,CAACS,YAAR,CAAqBE,UAAtB;AAA1B;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eAOI,QAAC,CAAD,CAAG,eAAH;AAAA,+BACI,QAAC,CAAD,CAAG,WAAH;AAAA,oBACKT,WAAW,CAACO,YAAZ,CAAyBG,GAAzB,CAA8BC,CAAD,iBAC1B,QAAC,cAAD;AAEI,YAAA,IAAI,EAAEA,CAAC,CAACC,IAFZ;AAGI,YAAA,QAAQ,EAAED,CAAC,CAACE,SAHhB;AAII,YAAA,SAAS,EAAEF,CAAC,CAACE;AAJjB,aACSF,CAAC,CAACG,EADX;AAAA;AAAA;AAAA;AAAA,kBADH;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAPJ,eAkBI,QAAC,CAAD,CAAG,eAAH;AAAA,+BACI,QAAC,CAAD,CAAG,WAAH;AAAA,oBACKd,WAAW,CAACe,OAAZ,CAAoBL,GAApB,CAAyBC,CAAD,iBACrB,QAAC,cAAD;AAEI,YAAA,IAAI,EAAEA,CAAC,CAACC,IAFZ;AAGI,YAAA,QAAQ,EAAED,CAAC,CAACE,SAHhB;AAII,YAAA,SAAS,EAAEF,CAAC,CAACE;AAJjB,aACSF,CAAC,CAACG,EADX;AAAA;AAAA;AAAA;AAAA,kBADH;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAlBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADkB,gBA+BjB;AAhCT,mBADA;AAoCH,CAlDM;;GAAMf,Y;UAC6CH,S;;;KAD7CG,Y","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport * as $ from './styled';\nimport { RepositoryItem } from '../RepositoryItem';\nimport useGithub from '../../hooks/GithubHooks';\nimport translation, { strings } from '../../services/translation';\n\nexport const Repositories = () => {\n    const { githubState, getUserRepos, getUserStarred } = useGithub();\n    const [hasUserToSearchRepos, setHasUserToSearchRepos] = useState(false);\n\n    useEffect(() => {\n        if (githubState.user.login) {\n            getUserRepos(githubState.user.login);\n            getUserStarred(githubState.user.login);\n        }\n        setHasUserToSearchRepos(githubState.repositories);\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [githubState.user.login]);\n\n    return (\n    <>\n        { hasUserToSearchRepos ? (\n            <$.TabsWrapper\n                selectedTabClassName = \"is-selected\"\n                selectedTabPanelClassName = \"is-selected\">\n                <$.TabListWrapper>\n                    <$.TabWrapper>{translation(strings.repositories.repositoriesTab)}</$.TabWrapper>\n                    <$.TabWrapper>{translation(strings.repositories.starredTab)}</$.TabWrapper>\n                </$.TabListWrapper>\n                <$.TabPanelWrapper>\n                    <$.ListWrapper>\n                        {githubState.repositories.map((e) => (\n                            <RepositoryItem\n                                key={e.id}\n                                name={e.name}\n                                fullName={e.full_name}\n                                reposLink={e.full_name} />\n                        ))}\n                    </$.ListWrapper>\n                </$.TabPanelWrapper>\n                <$.TabPanelWrapper>\n                    <$.ListWrapper>\n                        {githubState.starred.map((e) => (\n                            <RepositoryItem\n                                key={e.id}\n                                name={e.name}\n                                fullName={e.full_name}\n                                reposLink={e.full_name} />\n                        ))}\n                    </$.ListWrapper>\n                </$.TabPanelWrapper>\n            </$.TabsWrapper>\n        ) : (<></>)}\n        </>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}